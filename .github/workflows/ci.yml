name: CI

on:
  push:
    branches:
      - main
    tags:
      - '*'
  pull_request:

jobs:

  ## ========================= [ OPAM-based CI ] ========================= ##

  opam-based:

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-version:
          - 4.04.x
          - 4.05.x
          - 4.06.x
          - 4.07.x
          # - 4.08.x ## oldest version with 0install; explicitly included later
          - 4.09.x
          - 4.10.x
          - 4.11.x
          - 4.12.x
          - 4.13.x
          # - 4.14.x ## main supported version; explicitly included later
          - 5.0.x
        include:
          ## - oldest version supported by 0install, with and without lower
          ##   bounds checks
          ## - main supported version with lower bounds checks, with
          ##   documentation deployment, on Windows and on MacOS.
          - { os: ubuntu-latest,  ocaml-version: 4.08.x }
          - { os: ubuntu-latest,  ocaml-version: 4.08.x, lower-bounds: lower-bounds }
          - { os: ubuntu-latest,  ocaml-version: 4.14.x, lower-bounds: lower-bounds }
          - { os: ubuntu-latest,  ocaml-version: 4.14.x, deploy-doc: deploy-doc }
          - { os: macos-latest,   ocaml-version: 4.14.x }
          - { os: windows-latest, ocaml-version: 4.14.x }

    ## Grant GITHUB_TOKEN the permissions required to make a pages deployment
    permissions:
      pages: write
      id-token: write

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-version }}

      - name: Install Dune
        run: opam install dune --yes

      - name: Install OPAM Dependencies
        run: |
          opam exec -- dune build morbig.opam
          opam install . --yes --deps-only --with-doc --with-test

      - name: Install OPAM 0install
        if: matrix.lower-bounds == 'lower-bounds'
        run: |
          opam install opam-0install

      - name: Downgrade OPAM dependencies
        if: matrix.lower-bounds == 'lower-bounds'
        run: |
          ## Based on: https://sim642.eu/blog/2022/03/13/ocaml-dependencies-lower-bounds-ci/
          ## Note the current version of `ocaml-base-compiler`
          obc=ocaml-base-compiler.$(opam info --color=never --field=version ocaml-base-compiler)
          ## Ask `opam-0install` to get us the oldest possible dependencies for
          ## Morbig, while keeping the exact same version of
          ## `ocaml-base-compiler`.
          opam exec -- opam-0install --prefer-oldest --with-test morbig $obc > lower-bounds
          ## Log what we are aiming for
          echo <><> Packages to install ><><><><><><><><><><><><><><><><><><><><><><><><><><><>
          cat lower-bounds | tr ' ' '\n' | sed 's|\.|\t|' | column -t
          echo
          ## Ask `opam` to install the dependencies in question.
          opam install --yes $(cat lower-bounds)

      - name: Try Building
        run: opam exec -- make

      - name: Try Building Documentation
        run: opam exec -- make doc

      - name: Run Tests
        run: opam exec -- make check
        if: runner.os != 'Windows'
        ## Tests are written in a Unix-like way and cannot run on Windows.

      - name: Try Installing
        run: opam exec -- make install

      - name: Try Building Examples
        run: opam exec -- make examples
        if: runner.os != 'Windows'
        ## Examples are written in a Unix-like way and cannot run on Windows.

      - name: Try Uninstalling
        run: opam exec -- make uninstall

      - name: Try Cleaning
        run: opam exec -- make clean

      - name: Build Documentation for Auto-Deploy
        run: opam exec -- make doc

      - name: Upload documentation artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: doc/

      - name: Deploy to GitHub pages
        uses: actions/deploy-pages@v2
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && matrix.deploy-doc == 'deploy-doc'

  ## ========================= [ APT-based CI ] ========================== ##

  apt-based:

    runs-on: ubuntu-latest

    steps:
      - name: Install OCaml & Dependencies
        run: sudo apt-get install build-essential ocaml dune menhir libmenhir-ocaml-dev libppx-deriving-yojson-ocaml-dev libppx-visitors-ocaml-dev libyojson-ocaml-dev

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Try Building
        run: make

      ## No odoc in Debian stable, sadly, so no documentation!

      # - name: Try Building Documentation
      #   run: make doc

      - name: Run Tests
        run: make check

      - name: Try Installing
        run: sudo make install

      - name: Try Building Examples
        run: make examples

      - name: Try Uninstalling
        run: sudo make uninstall

      ## Not working at the moment (2023-03-31), `dune clean` complains about:
      ##
      ##     Error: unlink: _build/default/.dune/configurator: Permission denied
      ##
      ## Maybe related to https://github.com/ocaml/dune/issues/3857.

      # - name: Try Cleaning
      #   run: make clean

  ## ======================== [ Docker-based CI ] ======================== ##

  docker-based:

    strategy:
      fail-fast: false
      matrix:
        tag:
          - centos
          - debian
          - debian-testing
          - debian-unstable
          - opensuse
          - ubuntu
          - ubuntu-lts
        include:
          - { tag: alpine, deploy-image: deploy-image }

    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build . --tag morbig --build-arg tag=${{matrix.tag}}

      - name: Run Tests
        run: docker run --entrypoint /bin/sh morbig -c 'eval $(opam env) && cd /home/opam/morbig && make check && make install && make examples && make uninstall'

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        if: github.event_name == 'push' && matrix.deploy-image == 'deploy-image'

      - name: Rename Docker Image
        run: docker image tag morbig colisanr/morbig:${GITHUB_REF##*/}
        if: github.event_name == 'push' && matrix.deploy-image == 'deploy-image'

      - name: Push to Docker Hub
        run: docker push colisanr/morbig:${GITHUB_REF##*/}
        if: github.event_name == 'push' && matrix.deploy-image == 'deploy-image'
